{"version":3,"file":"EmbeddedAssets.js","sourceRoot":"","sources":["../src/EmbeddedAssets.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAC;AACvC,OAAO,KAAK,UAAU,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAEtD,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;AAE9D;;;GAGG;AACH,MAAM,UAAU,oBAAoB,CAAC,IAAY,EAAE,IAAmB;IACpE,MAAM,SAAS,GAAG,SAAS,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3D,IAAI,OAAO,IAAI,SAAS,CAAC,YAAY,KAAK,YAAY,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;QACvF,OAAO,IAAI,CAAC;KACb;IACD,OAAO,GAAG,UAAU,CAAC,eAAe,GAAG,SAAS,EAAE,CAAC;AACrD,CAAC;AAED,MAAM,WAAW,GAAG,kBAAkB,CAAC,WAAW,IAAI,kBAAkB,CAAC,WAAW,CAAC,WAAW,IAAI,EAAE,CAAC;AAEvG,MAAM,UAAU,mBAAmB,CAAC,IAAY,EAAE,IAAmB;IACnE,MAAM,QAAQ,GAAG,iDAAiD,IAAI,EAAE,CAAC;IACzE,qGAAqG;IACrG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QACzC,OAAO,IAAI,CAAC;KACb;IACD,OAAO,UAAU,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC;AAC3C,CAAC","sourcesContent":["import Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\nimport { NativeModulesProxy } from '@unimodules/core';\n\n// Fast lookup check if assets are available in the local bundle\nconst bundledAssets = new Set(FileSystem.bundledAssets || []);\n\n/**\n * Returns the local URI of an embedded asset from its hash and type, or null if the asset is not\n * included in the app bundle.\n */\nexport function _getEmbeddedAssetUri(hash: string, type: string | null): string | null {\n  const assetName = `asset_${hash}${type ? `.${type}` : ''}`;\n  if (__DEV__ || Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n    return null;\n  }\n  return `${FileSystem.bundleDirectory}${assetName}`;\n}\n\nconst localAssets = NativeModulesProxy.ExpoUpdates && NativeModulesProxy.ExpoUpdates.localAssets || {};\n\nexport function getEmbeddedAssetUri(hash: string, type: string | null): string | null {\n  const assetUrl = `https://d1wp6m56sqw74a.cloudfront.net/~assets/${hash}`;\n  // if (__DEV__ || Constants.appOwnership !== 'standalone' || !localAssets.hasOwnProperty(assetUrl)) {\n  if (!localAssets.hasOwnProperty(assetUrl)) {\n    return null;\n  }\n  return `file://${localAssets[assetUrl]}`;\n}\n"]}